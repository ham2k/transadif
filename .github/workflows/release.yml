name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: linux-x64
            archive: tar.gz
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
            name: linux-arm64
            archive: tar.gz
          - target: x86_64-pc-windows-gnu
            os: ubuntu-latest
            name: windows-x64
            archive: zip
          - target: x86_64-apple-darwin
            os: macos-latest
            name: macos-x64
            archive: tar.gz
          - target: aarch64-apple-darwin
            os: macos-latest
            name: macos-arm64
            archive: tar.gz

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross-compilation dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-mingw-w64-x86-64 gcc-aarch64-linux-gnu

      - name: Build
        run: |
          cargo build --release --target ${{ matrix.target }}

      - name: Get version
        id: version
        run: |
          VERSION=$(grep '^version = ' Cargo.toml | sed 's/version = "\(.*\)"/\1/')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create distribution directory
        run: |
          mkdir -p dist/transadif-v${{ steps.version.outputs.version }}-${{ matrix.name }}

      - name: Copy binaries (Unix)
        if: matrix.archive == 'tar.gz'
        run: |
          cp target/${{ matrix.target }}/release/transadif dist/transadif-v${{ steps.version.outputs.version }}-${{ matrix.name }}/
          cp target/${{ matrix.target }}/release/test-runner dist/transadif-v${{ steps.version.outputs.version }}-${{ matrix.name }}/

      - name: Copy binaries (Windows)
        if: matrix.archive == 'zip'
        run: |
          cp target/${{ matrix.target }}/release/transadif.exe dist/transadif-v${{ steps.version.outputs.version }}-${{ matrix.name }}/
          cp target/${{ matrix.target }}/release/test-runner.exe dist/transadif-v${{ steps.version.outputs.version }}-${{ matrix.name }}/

      - name: Copy documentation and test cases
        run: |
          cp README.md dist/transadif-v${{ steps.version.outputs.version }}-${{ matrix.name }}/
          cp LICENSE dist/transadif-v${{ steps.version.outputs.version }}-${{ matrix.name }}/
          cp GOALS.md dist/transadif-v${{ steps.version.outputs.version }}-${{ matrix.name }}/
          cp -r test-cases dist/transadif-v${{ steps.version.outputs.version }}-${{ matrix.name }}/

      - name: Create tar.gz archive
        if: matrix.archive == 'tar.gz'
        run: |
          cd dist
          tar -czf transadif-v${{ steps.version.outputs.version }}-${{ matrix.name }}.tar.gz transadif-v${{ steps.version.outputs.version }}-${{ matrix.name }}/

      - name: Create zip archive
        if: matrix.archive == 'zip'
        run: |
          cd dist
          zip -r transadif-v${{ steps.version.outputs.version }}-${{ matrix.name }}.zip transadif-v${{ steps.version.outputs.version }}-${{ matrix.name }}/

      - name: Create checksums
        run: |
          cd dist
          if [ "${{ matrix.archive }}" = "tar.gz" ]; then
            shasum -a 256 transadif-v${{ steps.version.outputs.version }}-${{ matrix.name }}.tar.gz > transadif-v${{ steps.version.outputs.version }}-${{ matrix.name }}.tar.gz.sha256
          else
            shasum -a 256 transadif-v${{ steps.version.outputs.version }}-${{ matrix.name }}.zip > transadif-v${{ steps.version.outputs.version }}-${{ matrix.name }}.zip.sha256
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: transadif-v${{ steps.version.outputs.version }}-${{ matrix.name }}
          path: |
            dist/transadif-v${{ steps.version.outputs.version }}-${{ matrix.name }}.*

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/*/*
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}